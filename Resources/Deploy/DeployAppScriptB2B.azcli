# Deployment Parameters 
$location = "eastus"
$resourceGroupName = "IdentityHackathon"

$subscription = "[Enter your Subscription Id]"
$AzureAdDomain = "[Enter your Tenant Domain i.e xxxx.onmicrosoft.com]"
$HomeTenantId = "[Enter your Tenant Id]"
$AzureAdClientId = "[Enter your Client ID]"
$AzureAdClientSecret = "[Enter your Client Secret]"

$random = Get-Random
# Web Application Name
$name = "identityhackathon-b2b-" + $random
$PublishFolder = "publish-b2b-" + $random
# Define the Visual Studio project directory
$projectDirectoryB2B = "C:\Azure-Samples\active-directory-aspnetcore-webapp-openidconnect-v2-aspnetcore3-1-callsgraph\WebApp-OpenIDConnect-DotNet.csproj"

# Login to Azure 
az login

# Set default account subscription
az account set --subscription $subscription

# Useful commands for login in Azure
# az account show
# az account list
# az logout

# Create resource group
az group create --location $location --resource-group $resourceGroupName

# Create App Service plan
az appservice plan create --name $name --resource-group $resourceGroupName --sku P1V2 --location $location 

# Create a Web App in App Service Plan created in previous step
# You can use the “az webapp list-runtimes” to get the available runtimes (i.e "dotnet:6", "DOTNETCORE:3.1",  etc.) 
az webapp create --name $name --plan $name --resource-group $resourceGroupName --runtime "DOTNETCORE:3.1" 
# Set Web App Configuration App Settings
az webapp config appsettings set --resource-group $resourceGroupName --name $name --settings WEBSITE_RUN_FROM_PACKAGE="1" AzureAd:Instance='https://login.microsoftonline.com/' AzureAd:TenantId=$HomeTenantId AzureAd:CallbackPath='/signin-oidc' AzureAd:ClientId=$AzureAdClientId AzureAd:Domain=$AzureAdDomain AzureAd:ClientSecret=$AzureAdClientSecret

# Build and publish the project in local directory
dotnet build $projectDirectoryB2B --configuration Release 
dotnet publish $projectDirectoryB2B --configuration Release -o .\$PublishFolder

# Compress and add in zip file the published version
Compress-Archive -Path .\$PublishFolder\* -DestinationPath ./$PublishFolder.zip -Force
# Deplpoy the Zip file to Web App Service.
az webapp deployment source config-zip --resource-group $resourceGroupName --name $name --src "./$PublishFolder.zip"
